======*Comandos Vagrant*======

git clone (enlace https)    			Clonar un proyecto
code . 			    			Abrir el visual desde el directorio que estamos
vagrant init		    			Crear el Vagrantfile
vagrant box list 	    			Listar las Maquinas Viturales 
vagrant box add (nombre)    			Añadir una maquina virtual
vagrnat up		    			Iniciar la maquina virtual
vagrant status   	    			Saber el estado de la maquina virtual
vagrant ssh		    			Meterte en la maquina virtual
vagrant ssh -c "sudo apt install nginx -y" 	Punto 3 practica
vagrant destroy					Borrar maquina virtual
vagrant reload (si actualizamos algo)
sudo apt update
sudo apt upgrade
sudo apt install -y nginx 
sudo systemctl status nginx
sudo apt install mysql
sudo systemctl status mysql
git add -A
git commit -m "texto que se ponga al commit"
git log --oneline				Mostrar los commits
vagrant provision
mysql sudo -u root -p
SOURCE "nombre de la base de datos"
git remote rm origin				Si pide la SSH
sudo nano /etc/nginx/sites-enabled/default

======*Comandos mysql*======
CREATE DATABASE	"nombre base de datos"							Crear Base de datos
ALTER DATABASE gestion_empleados CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;	Alterar base de datos 
CREATE TABLE "Nombre tabla"(
 "Nombre Campo" INT AUTO_INCREMENT PRIMARY KEY,						Clave Primaria
 "Nombre Campo" VARCHAR(200) NOT NULL,
 "Nombre Campo" INT,
 "Nombre Campo" DECIMAL (10, 2));

SHOW databases;										Ver bases de datos
SHow tables;										Ver tablas
USE  "nombre base de datos"								Cambiar base de datos
SELECT * FROM "nombre tabla"								Mostrar datos tabla

======*Orden Alterar datos tabla VagrantFile*======
sudo su						Acceder a root
mysql sudo -u root -p				Entrar en mysql
DELETE FROM gestion_empleados.empleados;	Borrar la tabla para que no se duplique
SOURCE datos_empleados.sql;			Actualizar datos en la base de datos mysql

======*Orden para ver en conexiones*======
$ sudo su
$ cd /
$ ls
$ cd primer-ejemplo-mysql-tema7
$ ls
$ cd backend
$ ls
$ php conexionBBDD.php

			
======*VagrantFile para subirlo a la web*======
Vagrant.configure("2") do |config|
 
    config.vm.box = "ubuntu/xenial64"
    config.vm.hostname = "server-diego-samuel"
    config.vm.network "private_network", ip: "192.168.50.55"
    config.vm.synced_folder ".", "/simulacro_examen_Samuel"
    config.vm.provider "virtualbox" do |vb|
        vb.memory = "1024"
        vb.cpus = 2
    end
    config.vm.provision "shell", inline: <<-SHELL
 
        sudo apt update
        sudo apt install -y apache2
	sudo sed -i -e 's/\\/var\\/www\\/html/\\/ejemplo_clase_15_05_2024/g' /etc/nginx/sites-enabled/default 
	sudo systemctl restart nginx
	sudo echo "<p>CONSEGUIDO</p>" > /simulacro_examen_Samuel/index.html

	*Realizar insercion de datos*
	echo "-- Insertar datos de ejemplo en la lista 'empleados'" > /home/vagrant/datos_empleados.sql
    	echo "INSERT INTO gestion_empleados.empleados (nombre, apellido, edad, salario, departamento) VALUES" >> 	/home/vagrant/datos_empleados.sql
    	echo "('Juan','Conzalez', 30, 2500.00, 'Ventas')," >> /home/vagrant/datos_empleados.sql


    SHELL
 
end

======*VagrantFile para mysql*======
Vagrant.configure("2") do |config|
 
  config.vm.box = "ubuntu/xenial64"
  config.vm.network "private_network", ip: "192.168.50.55"
  config.vm.synced_folder ".", "ruta"

  config.vm.provision "shell", inline: <<-SHELL
  
    sudo apt-get install -y php php-mysqli

    # Genera el archivo SQL con registros de empleados
    echo "-- Insertar datos de ejemplo en la lista 'empleados'" > /home/vagrant/datos_empleados.sql
    echo "INSERT INTO gestion_empleados.empleados (nombre, apellido, edad, salario, departamento) VALUES" >> /home/vagrant/datos_empleados.sql


======*Documento PHP*======
<?php

// Conectarse a la base de datos de MYSQL

$servername="localhost";
$username= "root";
$password= "root";
$dbname= "gestion_empleados";

// Creacion de la conexion 
$conn = new mysqli($servername, $username, $password, $dbname);

// Considerar acentos y "ñ's"
$conn->set_charset("utf8mb4");

// comprobar la conexion
if ($conn->connect_error) {
    die("Conexion fallida". $conn->connect_error);
}

// Consulta SQL para obtener los datos
$sql = "SELECT * FROM empleados";
$result = $conn->query($sql);

// Comprobar si se encontraron resultados
if ($result->num_rows > 0) {
    $data = array();
    
    //Recorrer los resultados del array correspondiente
    while ($row = $result->fetch_assoc()) {
        $data[] = $row;
    }

    echo json_encode($data);
    //var_dump($data);

} else {
    echo  "0 resultados";
}
$conn->close();

======*Documento nginx vagrant*======
location /backend/ {
           # Configuración para manejar solicitudes en /backend/
           include fastcgi_params;
           fastcgi_param REQUEST_METHOD $request_method;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           fastcgi_pass unix:/var/run/php/php7.0-fpm.sock; # Asegúrate de que coincida con la versión correcta
        }

======*Subir a git*======
CAMBIAR a HTTP
*Coger comandos del repositorio*
git remote add origin "ruta del Git"
git branch -M main
git push -u origin main


======*Index html*======
<!DOCTYPE html>
<html lang="es">
 
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ejemplo Web - Horario </title>
    <link rel="stylesheet" href="frontend/css/app.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
 
<body>
 
    <h1>Práctica SISIN - Tema 7 - Samuel Suárez Vitón</h1>
   
    <table id="modulos" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Modulos</th>
                <th>Horas</th>
                <th>Nombre Profesor</th>
                <th>Apellido Profesor</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
 

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        const urlObtenerHorarios = 'backend/conexionBBDD.php';
 
        // Llamar a la función obtenerHorarios para cargar la lista de Módulos Profesionales al cargar la página web
        obtenerHorarios();
 
        // Función asíncrona para obtener la lista de empleados
        async function obtenerHorarios() {
            try {
                // Obtener la lista de empleados del backend
                const horarios = await fetch(urlObtenerHorarios)
                    .then(respuesta => respuesta.json());
 
                // Renderizar el horario en la tabla
                const tbody = document.querySelector('#modulos tbody');
                horarios.forEach(horario => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${horario.modulos}</td>
                        <td>${horario.horas}</td>
                        <td>${horario.nombre_profesor}</td>
                        <td>${horario.apellido_profesor}</td>
                    `;
                    tbody.appendChild(row);
                });
 
            } catch (error) {
                console.log(error);
            }
 
        }
    </script>
 
</body>
 
</html>